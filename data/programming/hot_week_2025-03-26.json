[
  {
    "id": "1jk6q79",
    "title": "I built an audio recognition like Shazam written in Rust",
    "author": "Kitherare",
    "author_fullname": "t2_d5u438ic",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://github.com/Kither12/shezem-rs",
    "permalink": "https://www.reddit.com/r/programming/comments/1jk6q79/i_built_an_audio_recognition_like_shazam_written/",
    "created_utc": 1742976409,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 10,
    "num_comments": 0,
    "upvote_ratio": 1,
    "ups": 10,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "github.com",
    "suggested_sort": null
  },
  {
    "id": "1jjjcuq",
    "title": "Remote Code Execution Vulnerabilities in Ingress NGINX | Wiz Blog",
    "author": "geekydeveloper",
    "author_fullname": "t2_bk2wa",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://www.wiz.io/blog/ingress-nginx-kubernetes-vulnerabilities",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjjcuq/remote_code_execution_vulnerabilities_in_ingress/",
    "created_utc": 1742909320,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 209,
    "num_comments": 8,
    "upvote_ratio": 0.94,
    "ups": 209,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "wiz.io",
    "suggested_sort": null
  },
  {
    "id": "1jk5cie",
    "title": "PaperWM: A Tiling Window Manager with Infinite Horizontal Space, including Mouse Control",
    "author": "Alexander_Selkirk",
    "author_fullname": "t2_rvxk0",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://github.com/paperwm/PaperWM",
    "permalink": "https://www.reddit.com/r/programming/comments/1jk5cie/paperwm_a_tiling_window_manager_with_infinite/",
    "created_utc": 1742970080,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 5,
    "num_comments": 0,
    "upvote_ratio": 1,
    "ups": 5,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "github.com",
    "suggested_sort": null
  },
  {
    "id": "1jjluxe",
    "title": "Writing your own C++ standard library from scratch",
    "author": "p-orbitals",
    "author_fullname": "t2_stxflww6",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://nibblestew.blogspot.com/2025/03/writing-your-own-c-standard-library.html",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjluxe/writing_your_own_c_standard_library_from_scratch/",
    "created_utc": 1742916034,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 41,
    "num_comments": 18,
    "upvote_ratio": 0.87,
    "ups": 41,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "nibblestew.blogspot.com",
    "suggested_sort": null
  },
  {
    "id": "1jjqwax",
    "title": "Improving Firefox Stability in the Enterprise by Reducing DLL Injection",
    "author": "feross",
    "author_fullname": "t2_3m103",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://hacks.mozilla.org/2025/03/improving-firefox-stability-in-the-enterprise-by-reducing-dll-injection/",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjqwax/improving_firefox_stability_in_the_enterprise_by/",
    "created_utc": 1742928357,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 19,
    "num_comments": 2,
    "upvote_ratio": 0.92,
    "ups": 19,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "hacks.mozilla.org",
    "suggested_sort": null
  },
  {
    "id": "1jjmqmj",
    "title": "v8: switching back from Sea of Nodes back to CFG",
    "author": "self",
    "author_fullname": "t2_1pj6",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://v8.dev/blog/leaving-the-sea-of-nodes",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjmqmj/v8_switching_back_from_sea_of_nodes_back_to_cfg/",
    "created_utc": 1742918213,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 22,
    "num_comments": 7,
    "upvote_ratio": 0.86,
    "ups": 22,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "v8.dev",
    "suggested_sort": null
  },
  {
    "id": "1jk6a0f",
    "title": "Dribbble inspired Doodle",
    "author": "pusolito",
    "author_fullname": "t2_3z0oa0v7",
    "selftext": "Saw this cool design on dribbble and decided to [build it](https://nacular.github.io/doodle-tutorials/docs/animatingform) using [Doodle](https://github.com/nacular/doodle) ([documentation](https://nacular.github.io/doodle)).",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>Saw this cool design on dribbble and decided to <a href=\"https://nacular.github.io/doodle-tutorials/docs/animatingform\">build it</a> using <a href=\"https://github.com/nacular/doodle\">Doodle</a> (<a href=\"https://nacular.github.io/doodle\">documentation</a>).</p>\n</div><!-- SC_ON -->",
    "body": "Saw this cool design on dribbble and decided to [build it](https://nacular.github.io/doodle-tutorials/docs/animatingform) using [Doodle](https://github.com/nacular/doodle) ([documentation](https://nacular.github.io/doodle)).",
    "url": "https://youtu.be/b5QWYi8GOK0",
    "permalink": "https://www.reddit.com/r/programming/comments/1jk6a0f/dribbble_inspired_doodle/",
    "thumbnail": "image",
    "created_utc": 1742974235,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 0,
    "num_comments": 0,
    "upvote_ratio": 0.5,
    "ups": 0,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": {
      "oembed": {
        "provider_url": "https://www.youtube.com/",
        "title": "Doodle Animating Form",
        "html": "<iframe width=\"267\" height=\"200\" src=\"https://www.youtube.com/embed/b5QWYi8GOK0?feature=oembed&enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"Doodle Animating Form\"></iframe>",
        "thumbnail_width": 480,
        "height": 200,
        "width": 267,
        "version": "1.0",
        "author_name": "Nicholas Eddy",
        "provider_name": "YouTube",
        "thumbnail_url": "https://i.ytimg.com/vi/b5QWYi8GOK0/hqdefault.jpg",
        "type": "video",
        "thumbnail_height": 360,
        "author_url": "https://www.youtube.com/@pusolito"
      },
      "type": "youtube.com"
    },
    "domain": "youtu.be",
    "suggested_sort": null
  },
  {
    "id": "1jjjurj",
    "title": "Post Apocalyptic Computing",
    "author": "CoffeeStax",
    "author_fullname": "t2_15q0j2m5ow",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://thomashunter.name/posts/2025-03-23-post-apocalyptic-computing",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjjurj/post_apocalyptic_computing/",
    "created_utc": 1742910754,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 23,
    "num_comments": 6,
    "upvote_ratio": 0.81,
    "ups": 23,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "thomashunter.name",
    "suggested_sort": null
  },
  {
    "id": "1jjrlgp",
    "title": "GitHub - casparwylie/cascii-core: A web-based ASCII and Unicode diagram builder written in vanilla Javascript",
    "author": "Awkward-Speech-1977",
    "author_fullname": "t2_vkqjdexx",
    "selftext": "3 months ago I wanted to draw an ASCII diagram to include in some documentation at work. I found the few tools online to be insufficient, and was suprised there wasn't a more complete tool to get the job done.\n\nSince, I've built Cascii from scratch in vanilla Javascript (I'm not an FE dev, it might be obvious...).\n\nI hope it works alright. Please check out the live version at [https://cascii.app](https://cascii.app/), report problems, make diagrams to improve your code's documentation. Hope you enjoy using it.",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>3 months ago I wanted to draw an ASCII diagram to include in some documentation at work. I found the few tools online to be insufficient, and was suprised there wasn&#39;t a more complete tool to get the job done.</p>\n\n<p>Since, I&#39;ve built Cascii from scratch in vanilla Javascript (I&#39;m not an FE dev, it might be obvious...).</p>\n\n<p>I hope it works alright. Please check out the live version at <a href=\"https://cascii.app/\">https://cascii.app</a>, report problems, make diagrams to improve your code&#39;s documentation. Hope you enjoy using it.</p>\n</div><!-- SC_ON -->",
    "body": "3 months ago I wanted to draw an ASCII diagram to include in some documentation at work. I found the few tools online to be insufficient, and was suprised there wasn't a more complete tool to get the job done.\n\nSince, I've built Cascii from scratch in vanilla Javascript (I'm not an FE dev, it might be obvious...).\n\nI hope it works alright. Please check out the live version at [https://cascii.app](https://cascii.app/), report problems, make diagrams to improve your code's documentation. Hope you enjoy using it.",
    "url": "https://github.com/casparwylie/cascii-core",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjrlgp/github_casparwyliecasciicore_a_webbased_ascii_and/",
    "created_utc": 1742930082,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 9,
    "num_comments": 0,
    "upvote_ratio": 0.92,
    "ups": 9,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "github.com",
    "suggested_sort": null
  },
  {
    "id": "1jjfu49",
    "title": "Run Google's Gemma3 across devices with 20MB dependency",
    "author": "Quirky-Reveal-6502",
    "author_fullname": "t2_qeb2cgzls",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://www.secondstate.io/articles/gemma-3/",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjfu49/run_googles_gemma3_across_devices_with_20mb/",
    "created_utc": 1742896919,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 47,
    "num_comments": 0,
    "upvote_ratio": 0.74,
    "ups": 47,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "secondstate.io",
    "suggested_sort": null
  },
  {
    "id": "1jk4rzs",
    "title": "🔧 **Introducing CForge: A Modern C/C++ Build System!**",
    "author": "St1ckxy",
    "author_fullname": "t2_f9ygkgwd",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://github.com/ChaseSunstrom/cforge",
    "permalink": "https://www.reddit.com/r/programming/comments/1jk4rzs/introducing_cforge_a_modern_cc_build_system/",
    "created_utc": 1742967612,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 1,
    "num_comments": 2,
    "upvote_ratio": 0.54,
    "ups": 1,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "github.com",
    "suggested_sort": null
  },
  {
    "id": "1jirwz7",
    "title": "Algorithms Every Programmer Should Know",
    "author": "photon_lines",
    "author_fullname": "t2_ia2x9l1l6",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://photonlines.substack.com/p/visual-focused-algorithms-cheat-sheet",
    "permalink": "https://www.reddit.com/r/programming/comments/1jirwz7/algorithms_every_programmer_should_know/",
    "created_utc": 1742826403,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 676,
    "num_comments": 100,
    "upvote_ratio": 0.86,
    "ups": 676,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "photonlines.substack.com",
    "suggested_sort": null
  },
  {
    "id": "1jjnmq7",
    "title": "Phil Eaton on Technical Blogging",
    "author": "swdevtest",
    "author_fullname": "t2_zikzr",
    "selftext": "Phil Eaton, formerly TigerBeetle now EDB (Postgres) shares his blogging experience and advice",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>Phil Eaton, formerly TigerBeetle now EDB (Postgres) shares his blogging experience and advice</p>\n</div><!-- SC_ON -->",
    "body": "Phil Eaton, formerly TigerBeetle now EDB (Postgres) shares his blogging experience and advice",
    "url": "https://writethatblog.substack.com/p/phil-eaton-on-technical-blogging",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjnmq7/phil_eaton_on_technical_blogging/",
    "created_utc": 1742920452,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 3,
    "num_comments": 1,
    "upvote_ratio": 0.62,
    "ups": 3,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "writethatblog.substack.com",
    "suggested_sort": null
  },
  {
    "id": "1jjho6r",
    "title": "Hann: A Fast Approximate Nearest Neighbor Search Library for Go",
    "author": "West-Bottle9609",
    "author_fullname": "t2_159mc2def5",
    "selftext": "Hi\n\nI created an approximate nearest neighbor (ANN) search library for Go named Hann. It lets you add fast in-memory similarity search capabilities to your Go applications using different indexing algorithms, including Hierarchical Navigable Small World (HNSW), Product Quantization Inverted File (PQIVF), and Random Projection Tree (RPT).\n\nHann is still a work in progress. I'm sharing this announcement in case you're looking for a lightweight Go library to add similarity search features for high-dimensional data to your projects or if you just want to check it out.\n\n🔗 Project's GitHub repo: [github.com/habedi/hann](https://github.com/habedi/hann)",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>Hi</p>\n\n<p>I created an approximate nearest neighbor (ANN) search library for Go named Hann. It lets you add fast in-memory similarity search capabilities to your Go applications using different indexing algorithms, including Hierarchical Navigable Small World (HNSW), Product Quantization Inverted File (PQIVF), and Random Projection Tree (RPT).</p>\n\n<p>Hann is still a work in progress. I&#39;m sharing this announcement in case you&#39;re looking for a lightweight Go library to add similarity search features for high-dimensional data to your projects or if you just want to check it out.</p>\n\n<p>🔗 Project&#39;s GitHub repo: <a href=\"https://github.com/habedi/hann\">github.com/habedi/hann</a></p>\n</div><!-- SC_ON -->",
    "body": "Hi\n\nI created an approximate nearest neighbor (ANN) search library for Go named Hann. It lets you add fast in-memory similarity search capabilities to your Go applications using different indexing algorithms, including Hierarchical Navigable Small World (HNSW), Product Quantization Inverted File (PQIVF), and Random Projection Tree (RPT).\n\nHann is still a work in progress. I'm sharing this announcement in case you're looking for a lightweight Go library to add similarity search features for high-dimensional data to your projects or if you just want to check it out.\n\n🔗 Project's GitHub repo: [github.com/habedi/hann](https://github.com/habedi/hann)",
    "url": "https://github.com/habedi/hann",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjho6r/hann_a_fast_approximate_nearest_neighbor_search/",
    "created_utc": 1742904047,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 6,
    "num_comments": 0,
    "upvote_ratio": 0.72,
    "ups": 6,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "github.com",
    "suggested_sort": null
  },
  {
    "id": "1jisdju",
    "title": "TypeScript Migrates to Go: What's Really Behind That 10x Performance Claim?",
    "author": "Adventurous-Salt8514",
    "author_fullname": "t2_96l32j0u",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://www.architecture-weekly.com/p/typescript-migrates-to-go-whats-really",
    "permalink": "https://www.reddit.com/r/programming/comments/1jisdju/typescript_migrates_to_go_whats_really_behind/",
    "created_utc": 1742827602,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 280,
    "num_comments": 118,
    "upvote_ratio": 0.75,
    "ups": 280,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "architecture-weekly.com",
    "suggested_sort": null
  },
  {
    "id": "1jjtv4s",
    "title": "Open WebUI tutorial — Supercharging Your Local AI with RAG and Custom Knowledge Bases",
    "author": "PeterHash",
    "author_fullname": "t2_2xm5rxsk",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://medium.com/@hautel.alex2000/open-webui-tutorial-supercharging-your-local-ai-with-rag-and-custom-knowledge-bases-334d272c8c40",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjtv4s/open_webui_tutorial_supercharging_your_local_ai/",
    "created_utc": 1742935559,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 0,
    "num_comments": 0,
    "upvote_ratio": 0.46,
    "ups": 0,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "medium.com",
    "suggested_sort": null
  },
  {
    "id": "1jjmjl9",
    "title": "Chris Salvato: Building Developer Paradise by Sitting in the Problem Space",
    "author": "robbyrussell",
    "author_fullname": "t2_l6up",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://maintainable.fm/episodes/chris-salvato-building-developer-paradise-by-sitting-in-the-problem-space",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjmjl9/chris_salvato_building_developer_paradise_by/",
    "created_utc": 1742917720,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 2,
    "num_comments": 0,
    "upvote_ratio": 0.76,
    "ups": 2,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "maintainable.fm",
    "suggested_sort": null
  },
  {
    "id": "1jj3iwn",
    "title": "Evolving Scala, by Martin Odersky and Haoyi Li",
    "author": "sideEffffECt",
    "author_fullname": "t2_8t63o",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://www.scala-lang.org/blog/2025/03/24/evolving-scala.html",
    "permalink": "https://www.reddit.com/r/programming/comments/1jj3iwn/evolving_scala_by_martin_odersky_and_haoyi_li/",
    "created_utc": 1742854237,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 44,
    "num_comments": 23,
    "upvote_ratio": 0.86,
    "ups": 44,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "scala-lang.org",
    "suggested_sort": null
  },
  {
    "id": "1jk0cuv",
    "title": "Sobrecarga de Métodos en Python",
    "author": "emanuelpeg",
    "author_fullname": "t2_4015onhj",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://emanuelpeg.blogspot.com/2025/03/sobrecarga-de-metodos-en-python.html",
    "permalink": "https://www.reddit.com/r/programming/comments/1jk0cuv/sobrecarga_de_métodos_en_python/",
    "created_utc": 1742952734,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 0,
    "num_comments": 0,
    "upvote_ratio": 0.3,
    "ups": 0,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "emanuelpeg.blogspot.com",
    "suggested_sort": null
  },
  {
    "id": "1jjnup8",
    "title": "Reading Code Effectively: An Overlooked Developer Skill • Marit van Dijk & Hannes Lowette",
    "author": "goto-con",
    "author_fullname": "t2_2yrrce83",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://youtu.be/_R_Vc17mxNE",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjnup8/reading_code_effectively_an_overlooked_developer/",
    "thumbnail": "image",
    "created_utc": 1742921010,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 0,
    "num_comments": 0,
    "upvote_ratio": 0.5,
    "ups": 0,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": {
      "oembed": {
        "provider_url": "https://www.youtube.com/",
        "title": "Reading Code Effectively: An Overlooked Dev. Skill • Marit van Dijk & Hannes Lowette • GOTO 2025",
        "html": "<iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/_R_Vc17mxNE?feature=oembed&enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"Reading Code Effectively: An Overlooked Dev. Skill • Marit van Dijk &amp; Hannes Lowette • GOTO 2025\"></iframe>",
        "thumbnail_width": 480,
        "height": 200,
        "width": 356,
        "version": "1.0",
        "author_name": "GOTO Conferences",
        "provider_name": "YouTube",
        "thumbnail_url": "https://i.ytimg.com/vi/_R_Vc17mxNE/hqdefault.jpg",
        "type": "video",
        "thumbnail_height": 360,
        "author_url": "https://www.youtube.com/@GOTO-"
      },
      "type": "youtube.com"
    },
    "domain": "youtu.be",
    "suggested_sort": null
  },
  {
    "id": "1jj16rl",
    "title": "Securing non-human identities",
    "author": "West-Chard-1474",
    "author_fullname": "t2_17yas4vd58",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://www.cerbos.dev/blog/securing-non-human-identities-understanding-and-addressing-owasp-top-10-threats",
    "permalink": "https://www.reddit.com/r/programming/comments/1jj16rl/securing_nonhuman_identities/",
    "created_utc": 1742848530,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 44,
    "num_comments": 4,
    "upvote_ratio": 0.89,
    "ups": 44,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "cerbos.dev",
    "suggested_sort": null
  },
  {
    "id": "1jjemla",
    "title": "What are Preview Features in Java?: A Comprehensive Guide",
    "author": "erdsingh24",
    "author_fullname": "t2_cgqgae7e",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://javatechonline.com/what-are-preview-features-in-java/",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjemla/what_are_preview_features_in_java_a_comprehensive/",
    "created_utc": 1742891286,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 3,
    "num_comments": 1,
    "upvote_ratio": 0.59,
    "ups": 3,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "javatechonline.com",
    "suggested_sort": null
  },
  {
    "id": "1jjzg8w",
    "title": "What the heck is MCP? And why is everybody talking about it?",
    "author": "Party-Tower-5475",
    "author_fullname": "t2_wg3ys6qlm",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://pieces.app/blog/mcp?utm_source=reddit&utm_medium=referral&utm_campaign=r38",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjzg8w/what_the_heck_is_mcp_and_why_is_everybody_talking/",
    "created_utc": 1742950103,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 0,
    "num_comments": 14,
    "upvote_ratio": 0.37,
    "ups": 0,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "pieces.app",
    "suggested_sort": null
  },
  {
    "id": "1jjqfu5",
    "title": "Comprehensive Guide on Web Scraping with Python",
    "author": "yakult2450",
    "author_fullname": "t2_2292y409",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://www.scrapingdog.com/blog/web-scraping-with-python/",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjqfu5/comprehensive_guide_on_web_scraping_with_python/",
    "created_utc": 1742927268,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 0,
    "num_comments": 0,
    "upvote_ratio": 0.4,
    "ups": 0,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "scrapingdog.com",
    "suggested_sort": null
  },
  {
    "id": "1jisknm",
    "title": "AI’s Hidden Crisis: How Our Obsession With Innovation is Building a House of Cards",
    "author": "TerryC_IndieGameDev",
    "author_fullname": "t2_6n68iiaj",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://medium.com/mr-plan-publication/ais-hidden-crisis-how-our-obsession-with-innovation-is-building-a-house-of-cards-29090b92047a?sk=66fd1a81a4b8f03cee827022055d74bd",
    "permalink": "https://www.reddit.com/r/programming/comments/1jisknm/ais_hidden_crisis_how_our_obsession_with/",
    "created_utc": 1742828103,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 38,
    "num_comments": 10,
    "upvote_ratio": 0.59,
    "ups": 38,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "medium.com",
    "suggested_sort": null
  },
  {
    "id": "1jiu30j",
    "title": "Bulletproof Sessions: Secure, Cookieless Sessions",
    "author": "tudorconstantin",
    "author_fullname": "t2_7b23y",
    "selftext": "As if there weren't enough session handling mechanisms (session id's in each URL, cookies, http only cookies, JWT tokens in the request header), let me introduce you a novel one: **having a service worker that intercepts and cryptographically signs all the requests to the origin**.  \n  \nWith the traditional session handling mechanisms, we have a static piece of information, usually generated on the server, which gets sent back to the server with each request.  \n  \nWith the bulletproof sessions concept, **the information sent back to the server is dynamic and can not be replayed or faked by an attacker**.  \n",
    "selftext_html": "<!-- SC_OFF --><div class=\"md\"><p>As if there weren&#39;t enough session handling mechanisms (session id&#39;s in each URL, cookies, http only cookies, JWT tokens in the request header), let me introduce you a novel one: <strong>having a service worker that intercepts and cryptographically signs all the requests to the origin</strong>.  </p>\n\n<p>With the traditional session handling mechanisms, we have a static piece of information, usually generated on the server, which gets sent back to the server with each request.  </p>\n\n<p>With the bulletproof sessions concept, <strong>the information sent back to the server is dynamic and can not be replayed or faked by an attacker</strong>.  </p>\n</div><!-- SC_ON -->",
    "body": "As if there weren't enough session handling mechanisms (session id's in each URL, cookies, http only cookies, JWT tokens in the request header), let me introduce you a novel one: **having a service worker that intercepts and cryptographically signs all the requests to the origin**.  \n  \nWith the traditional session handling mechanisms, we have a static piece of information, usually generated on the server, which gets sent back to the server with each request.  \n  \nWith the bulletproof sessions concept, **the information sent back to the server is dynamic and can not be replayed or faked by an attacker**.  \n",
    "url": "https://github.com/tudorconstantin/bulletproof-sessions",
    "permalink": "https://www.reddit.com/r/programming/comments/1jiu30j/bulletproof_sessions_secure_cookieless_sessions/",
    "created_utc": 1742831813,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 31,
    "num_comments": 15,
    "upvote_ratio": 0.87,
    "ups": 31,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "github.com",
    "suggested_sort": null
  },
  {
    "id": "1jjf1vq",
    "title": "Treating integration tests as just tests (using Testcontainers)",
    "author": "der_gopher",
    "author_fullname": "t2_149tyuiyao",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://www.youtube.com/watch?v=6ONAqAntHtQ",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjf1vq/treating_integration_tests_as_just_tests_using/",
    "thumbnail": "image",
    "created_utc": 1742893306,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 1,
    "num_comments": 0,
    "upvote_ratio": 0.57,
    "ups": 1,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": {
      "oembed": {
        "provider_url": "https://www.youtube.com/",
        "title": "Treating integration tests as just tests (using Testcontainers)",
        "html": "<iframe width=\"356\" height=\"200\" src=\"https://www.youtube.com/embed/6ONAqAntHtQ?feature=oembed&enablejsapi=1\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" referrerpolicy=\"strict-origin-when-cross-origin\" allowfullscreen title=\"Treating integration tests as just tests (using Testcontainers)\"></iframe>",
        "thumbnail_width": 480,
        "height": 200,
        "width": 356,
        "version": "1.0",
        "author_name": "package main",
        "provider_name": "YouTube",
        "thumbnail_url": "https://i.ytimg.com/vi/6ONAqAntHtQ/hqdefault.jpg",
        "type": "video",
        "thumbnail_height": 360,
        "author_url": "https://www.youtube.com/@packagemain"
      },
      "type": "youtube.com"
    },
    "domain": "youtube.com",
    "suggested_sort": null
  },
  {
    "id": "1jjbnji",
    "title": "Networking for Web Developers: How the Internet Works",
    "author": "themsaid",
    "author_fullname": "t2_nc352",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://themsaid.com/networking-for-web-developers-how-the-internet-works",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjbnji/networking_for_web_developers_how_the_internet/",
    "created_utc": 1742878202,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 1,
    "num_comments": 1,
    "upvote_ratio": 0.56,
    "ups": 1,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "themsaid.com",
    "suggested_sort": null
  },
  {
    "id": "1jixt1j",
    "title": "Ledger Implementation in PostgreSQL",
    "author": "pgr0ss",
    "author_fullname": "t2_3uzw1",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://pgrs.net/2025/03/24/pgledger-ledger-implementation-in-postgresql/",
    "permalink": "https://www.reddit.com/r/programming/comments/1jixt1j/ledger_implementation_in_postgresql/",
    "created_utc": 1742840619,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 14,
    "num_comments": 3,
    "upvote_ratio": 0.79,
    "ups": 14,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": null,
    "domain": "pgrs.net",
    "suggested_sort": null,
    "crosspost_parent_list": [
      {
        "approved_at_utc": null,
        "subreddit": {
          "display_name": "PostgreSQL"
        },
        "selftext": "",
        "user_reports": [],
        "saved": false,
        "mod_reason_title": null,
        "gilded": 0,
        "clicked": false,
        "title": "Ledger Implementation in PostgreSQL",
        "link_flair_richtext": [],
        "subreddit_name_prefixed": "r/PostgreSQL",
        "hidden": false,
        "pwls": 6,
        "link_flair_css_class": "",
        "downs": 0,
        "thumbnail_height": null,
        "top_awarded_type": null,
        "hide_score": false,
        "name": "t3_1jiwwia",
        "quarantine": false,
        "link_flair_text_color": "dark",
        "upvote_ratio": 0.99,
        "author_flair_background_color": null,
        "subreddit_type": "public",
        "ups": 69,
        "total_awards_received": 0,
        "media_embed": {},
        "thumbnail_width": null,
        "author_flair_template_id": null,
        "is_original_content": false,
        "author_fullname": "t2_3uzw1",
        "secure_media": null,
        "is_reddit_media_domain": false,
        "is_meta": false,
        "category": null,
        "secure_media_embed": {},
        "link_flair_text": "Projects",
        "can_mod_post": false,
        "score": 69,
        "approved_by": null,
        "is_created_from_ads_ui": false,
        "author_premium": false,
        "thumbnail": "default",
        "edited": false,
        "author_flair_css_class": null,
        "author_flair_richtext": [],
        "gildings": {},
        "content_categories": null,
        "is_self": false,
        "mod_note": null,
        "created": 1742838540,
        "link_flair_type": "text",
        "wls": 6,
        "removed_by_category": null,
        "banned_by": null,
        "author_flair_type": "text",
        "domain": "pgrs.net",
        "allow_live_comments": false,
        "selftext_html": null,
        "likes": null,
        "suggested_sort": null,
        "banned_at_utc": null,
        "url_overridden_by_dest": "https://pgrs.net/2025/03/24/pgledger-ledger-implementation-in-postgresql/",
        "view_count": null,
        "archived": false,
        "no_follow": false,
        "is_crosspostable": true,
        "pinned": false,
        "over_18": false,
        "all_awardings": [],
        "awarders": [],
        "media_only": false,
        "link_flair_template_id": "e42aeec2-21a6-11ee-9e82-461958c9a646",
        "can_gild": false,
        "spoiler": false,
        "locked": false,
        "author_flair_text": null,
        "treatment_tags": [],
        "visited": false,
        "removed_by": null,
        "num_reports": null,
        "distinguished": null,
        "subreddit_id": "t5_2qvw7",
        "author_is_blocked": false,
        "mod_reason_by": null,
        "removal_reason": null,
        "link_flair_background_color": "#dadada",
        "id": "1jiwwia",
        "is_robot_indexable": true,
        "report_reasons": null,
        "author": {
          "name": "pgr0ss"
        },
        "discussion_type": null,
        "num_comments": 23,
        "send_replies": true,
        "media": null,
        "contest_mode": false,
        "author_patreon_flair": false,
        "author_flair_text_color": null,
        "permalink": "/r/PostgreSQL/comments/1jiwwia/ledger_implementation_in_postgresql/",
        "stickied": false,
        "url": "https://pgrs.net/2025/03/24/pgledger-ledger-implementation-in-postgresql/",
        "subreddit_subscribers": 56090,
        "created_utc": 1742838540,
        "num_crossposts": 1,
        "mod_reports": [],
        "is_video": false
      }
    ]
  },
  {
    "id": "1jjdyk2",
    "title": "Effective Platform Engineering • Ajay Chankramath, Nic Cheneweth, Bryan Oliver, Sean Alvarez & Wesley Reisz",
    "author": "goto-con",
    "author_fullname": "t2_2yrrce83",
    "selftext": "",
    "selftext_html": "",
    "body": "",
    "url": "https://www.buzzsprout.com/1714721/16771844",
    "permalink": "https://www.reddit.com/r/programming/comments/1jjdyk2/effective_platform_engineering_ajay_chankramath/",
    "thumbnail": "image",
    "created_utc": 1742888158,
    "subreddit": "programming",
    "subreddit_id": "t5_2fwo",
    "subreddit_type": "public",
    "score": 0,
    "num_comments": 1,
    "upvote_ratio": 0.43,
    "ups": 0,
    "downs": 0,
    "is_original_content": false,
    "is_self": false,
    "is_video": false,
    "is_gallery": false,
    "over_18": false,
    "spoiler": false,
    "stickied": false,
    "archived": false,
    "locked": false,
    "link_flair_text": null,
    "link_flair_css_class": null,
    "gilded": 0,
    "total_awards_received": 0,
    "media": {
      "oembed": {
        "provider_url": "http://buzzsprout.com",
        "description": "This interview was recorded for the GOTO Book Club.http://gotopia.tech/bookclubRead the full transcription of the interview hereAjay Chankramath - CTO at Brillio &amp; Co-Author of \"Effective Platform Engineering\"Nic Cheneweth - Principal Consultant at Thoughtworks &amp; Co-Author of \"Effective P...",
        "title": "Effective Platform Engineering * Ajay Chankramath, Nic Cheneweth, Bryan Oliver, Sean Alvarez & Wesley Reisz - GOTO - The Brightest Minds in Tech",
        "thumbnail_width": 250,
        "height": 210,
        "width": 500,
        "html": "<iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.buzzsprout.com%2F1714721%2Fepisodes%2F16771844-effective-platform-engineering-ajay-chankramath-nic-cheneweth-bryan-oliver-sean-alvarez-wesley-reisz%3Fclient_source%3Dtwitter_card%26player_type%3Dfull_screen&display_name=Buzzsprout&url=https%3A%2F%2Fwww.buzzsprout.com%2F1714721%2Fepisodes%2F16771844&image=https%3A%2F%2Fwww.buzzsprout.com%2Frails%2Factive_storage%2Frepresentations%2Fredirect%2FeyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCTk8yTVFJPSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ%3D%3D--4db10614af66afbac17d82459e95ab16cca697ce%2FeyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdDVG9MWm05eWJXRjBPZ2hxY0djNkUzSmxjMmw2WlY5MGIxOW1hV3hzV3docEFmcHBBZnA3QmpvSlkzSnZjRG9MWTJWdWRISmxPZ3B6WVhabGNuc0dPZ3h4ZFdGc2FYUjVhVUU2RUdOdmJHOTFjbk53WVdObFNTSUpjM0puWWdZNkJrVlUiLCJleHAiOm51bGwsInB1ciI6InZhcmlhdGlvbiJ9fQ%3D%3D--bfdad5b04912fa8a9db85eb3989e46c5908e2723%2Flinkedin_profile.jpg&type=text%2Fhtml&schema=buzzsprout\" width=\"500\" height=\"210\" scrolling=\"no\" title=\"Buzzsprout embed\" frameborder=\"0\" allow=\"autoplay; fullscreen; encrypted-media; picture-in-picture;\" allowfullscreen=\"true\"></iframe>",
        "version": "1.0",
        "provider_name": "Buzzsprout",
        "thumbnail_url": "https://www.buzzsprout.com/rails/active_storage/representations/redirect/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaHBCTk8yTVFJPSIsImV4cCI6bnVsbCwicHVyIjoiYmxvYl9pZCJ9fQ==--4db10614af66afbac17d82459e95ab16cca697ce/eyJfcmFpbHMiOnsibWVzc2FnZSI6IkJBaDdDVG9MWm05eWJXRjBPZ2hxY0djNkUzSmxjMmw2WlY5MGIxOW1hV3hzV3docEFmcHBBZnA3QmpvSlkzSnZjRG9MWTJWdWRISmxPZ3B6WVhabGNuc0dPZ3h4ZFdGc2FYUjVhVUU2RUdOdmJHOTFjbk53WVdObFNTSUpjM0puWWdZNkJrVlUiLCJleHAiOm51bGwsInB1ciI6InZhcmlhdGlvbiJ9fQ==--bfdad5b04912fa8a9db85eb3989e46c5908e2723/linkedin_profile.jpg",
        "type": "video",
        "thumbnail_height": 250
      },
      "type": "buzzsprout.com"
    },
    "domain": "buzzsprout.com",
    "suggested_sort": null
  }
]